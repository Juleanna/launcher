# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'launcher.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_LauncherWindow(object):
    def setupUi(self, LauncherWindow):
        LauncherWindow.setObjectName("LauncherWindow")
        LauncherWindow.resize(1277, 728)
        LauncherWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(LauncherWindow)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.Name_server = QtWidgets.QLabel(self.centralwidget)
        self.Name_server.setEnabled(True)
        self.Name_server.setGeometry(QtCore.QRect(9, 9, 300, 22))
        self.Name_server.setMaximumSize(QtCore.QSize(300, 30))
        self.Name_server.setStyleSheet("font: 25 18pt \"Bahnschrift Light Condensed\";")
        self.Name_server.setObjectName("Name_server")
        self.Baner = QtWidgets.QGraphicsView(self.centralwidget)
        self.Baner.setGeometry(QtCore.QRect(830, 250, 361, 211))
        self.Baner.setStyleSheet("background-image: url(:/images/baner.png);\n"
"background-repeat: no-repeat;\n"
"                background-position: center;\n"
"")
        self.Baner.setObjectName("Baner")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 1277, 728))
        self.frame.setStyleSheet("#frame\n"
"{background-image: url(:/images/background.png);\n"
"background-repeat: no-repeat;\n"
"                background-position: center;\n"
"                border: none;  \n"
"}\n"
"\n"
"")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.Telegram = QtWidgets.QToolButton(self.frame)
        self.Telegram.setGeometry(QtCore.QRect(1232, 110, 32, 32))
        self.Telegram.setMaximumSize(QtCore.QSize(32, 32))
        self.Telegram.setStyleSheet("#Telegram {\n"
"  width: 32px;\n"
"  height: 32px;\n"
"  border-radius: 16px; /* Половина высоты кнопки для создания круглой формы */\n"
"  background-color: black;\n"
"  border: 2px solid #ffffff;\n"
"  padding: 0;\n"
" \n"
"    background-image: url(:/images/telegram.png);\n"
"  background-position: center;\n"
" \n"
"}\n"
"\n"
"\n"
"#Telegram:hover:pressed {\n"
"    background-color: rgba(92, 184, 92, 80%); /* Прозрачный фон кнопки при нажатии */\n"
"}\n"
"\n"
"#Telegram:hover:!pressed {\n"
" background-color: black;\n"
"     border: 2px solid #ffca00;\n"
"  padding: 0;\n"
"    \n"
"    background-image: url(:/images/telegram_hover.png);\n"
"}\n"
"\n"
"\n"
"")
        self.Telegram.setText("")
        self.Telegram.setIconSize(QtCore.QSize(0, 0))
        self.Telegram.setCheckable(True)
        self.Telegram.setChecked(True)
        self.Telegram.setObjectName("Telegram")
        self.Facebook = QtWidgets.QToolButton(self.frame)
        self.Facebook.setGeometry(QtCore.QRect(1232, 160, 32, 32))
        self.Facebook.setMaximumSize(QtCore.QSize(32, 32))
        self.Facebook.setStyleSheet("#Facebook{\n"
"  width: 32px;\n"
"  height: 32px;\n"
"  border-radius: 16px; /* Половина высоты кнопки для создания круглой формы */\n"
"  background-color: black;\n"
"  border: 2px solid #ffffff;\n"
"  padding: 0;\n"
"    background-image: url(:/images/facebook.png);\n"
"  background-position: center;\n"
" \n"
"}\n"
"\n"
"\n"
"#Facebook:hover:pressed {\n"
"    background-color: rgba(92, 184, 92, 80%); /* Прозрачный фон кнопки при нажатии */\n"
"}\n"
"\n"
"#Facebook:hover:!pressed {\n"
" background-color: black;\n"
"     border: 2px solid #ffca00;\n"
"  padding: 0;\n"
"    \n"
"    background-image: url(:/images/facebook_hover.png);\n"
"}\n"
"\n"
"\n"
"")
        self.Facebook.setText("")
        self.Facebook.setIconSize(QtCore.QSize(0, 0))
        self.Facebook.setCheckable(True)
        self.Facebook.setChecked(True)
        self.Facebook.setObjectName("Facebook")
        self.VK = QtWidgets.QToolButton(self.frame)
        self.VK.setGeometry(QtCore.QRect(1232, 210, 32, 32))
        self.VK.setMaximumSize(QtCore.QSize(32, 32))
        self.VK.setStyleSheet("#VK{\n"
"  width: 32px;\n"
"  height: 32px;\n"
"  border-radius: 16px; /* Половина высоты кнопки для создания круглой формы */\n"
"  background-color: black;\n"
"  border: 2px solid #ffffff;\n"
"  padding: 0;\n"
"    background-image: url(:/images/vk.png);\n"
"  background-position: center;\n"
" \n"
"}\n"
"\n"
"\n"
"#VK:hover:pressed {\n"
"    background-color: rgba(92, 184, 92, 80%); /* Прозрачный фон кнопки при нажатии */\n"
"}\n"
"\n"
"#VK:hover:!pressed {\n"
" background-color: black;\n"
" border: 2px solid #ffca00;\n"
"  padding: 0;    \n"
"    \n"
"    background-image: url(:/images/vk_hover.png);\n"
"}\n"
"")
        self.VK.setText("")
        self.VK.setIconSize(QtCore.QSize(0, 0))
        self.VK.setCheckable(True)
        self.VK.setChecked(True)
        self.VK.setObjectName("VK")
        self.Instagram = QtWidgets.QToolButton(self.frame)
        self.Instagram.setGeometry(QtCore.QRect(1232, 260, 32, 32))
        self.Instagram.setMaximumSize(QtCore.QSize(32, 32))
        self.Instagram.setStyleSheet("#Instagram{\n"
"  width: 32px;\n"
"  height: 32px;\n"
"  border-radius: 16px; /* Половина высоты кнопки для создания круглой формы */\n"
"  background-color: black;\n"
"  border: 2px solid #ffffff;\n"
"  padding: 0;\n"
"    background-image: url(:/images/instagram.png);\n"
"  background-position: center;\n"
" \n"
"}\n"
"\n"
"\n"
"#Instagram:hover:pressed {\n"
"    background-color: rgba(92, 184, 92, 80%); /* Прозрачный фон кнопки при нажатии */\n"
"}\n"
"\n"
"#Instagram:hover:!pressed {\n"
" background-color: black;\n"
" border: 2px solid #ffca00;\n"
"  padding: 0;    \n"
"    \n"
"    background-image: url(:/images/instagram_hover.png);\n"
"}\n"
"")
        self.Instagram.setText("")
        self.Instagram.setIconSize(QtCore.QSize(0, 0))
        self.Instagram.setCheckable(True)
        self.Instagram.setChecked(True)
        self.Instagram.setObjectName("Instagram")
        self.Discord = QtWidgets.QToolButton(self.frame)
        self.Discord.setGeometry(QtCore.QRect(1232, 310, 32, 32))
        self.Discord.setMaximumSize(QtCore.QSize(32, 32))
        self.Discord.setStyleSheet("#Discord{\n"
"  width: 32px;\n"
"  height: 32px;\n"
"  border-radius: 16px; /* Половина высоты кнопки для создания круглой формы */\n"
"  background-color: black;\n"
"  border: 2px solid #ffffff;\n"
"  padding: 0;\n"
"    background-image: url(:/images/discord.png);\n"
"  background-position: center;\n"
" \n"
"}\n"
"\n"
"\n"
"#Discord:hover:pressed {\n"
"    background-color: rgba(92, 184, 92, 80%); /* Прозрачный фон кнопки при нажатии */\n"
"}\n"
"\n"
"#Discord:hover:!pressed {\n"
" background-color: black;\n"
" border: 2px solid #ffca00;\n"
"  padding: 0;    \n"
"    \n"
"    background-image: url(:/images/discord_hover.png);\n"
"}\n"
"")
        self.Discord.setText("")
        self.Discord.setIconSize(QtCore.QSize(0, 0))
        self.Discord.setCheckable(True)
        self.Discord.setChecked(True)
        self.Discord.setObjectName("Discord")
        self.Logo = QtWidgets.QGraphicsView(self.frame)
        self.Logo.setGeometry(QtCore.QRect(10, 40, 138, 138))
        self.Logo.setStyleSheet("background-image: url(:/images/logo.png);\n"
"border:none;")
        self.Logo.setObjectName("Logo")
        self.Version = QtWidgets.QLabel(self.frame)
        self.Version.setGeometry(QtCore.QRect(1050, 12, 141, 16))
        self.Version.setObjectName("Version")
        self.Site = QtWidgets.QToolButton(self.frame)
        self.Site.setGeometry(QtCore.QRect(1232, 60, 32, 32))
        self.Site.setMaximumSize(QtCore.QSize(32, 32))
        self.Site.setStyleSheet("#Site {\n"
"  width: 32px;\n"
"  height: 32px;\n"
"  border-radius: 16px; /* Половина высоты кнопки для создания круглой формы */\n"
"  background-color: black;\n"
"  border: 2px solid #ffffff;\n"
"  padding: 0;\n"
"    background-image: url(:/images/globe.png);\n"
"  background-position: center;\n"
"\n"
"}\n"
"\n"
"\n"
"#Site:hover:pressed {\n"
"    background-color: rgba(92, 184, 92, 80%); /* Прозрачный фон кнопки при нажатии */\n"
"}\n"
"\n"
"#Site:hover:!pressed {\n"
" background-color: black;\n"
"background-image: url(:/images/globe_hover.png);\n"
"  border: 2px solid #ffca00;\n"
"  padding: 0;\n"
"}\n"
"\n"
"\n"
"")
        self.Site.setText("")
        self.Site.setIconSize(QtCore.QSize(0, 0))
        self.Site.setCheckable(True)
        self.Site.setChecked(True)
        self.Site.setObjectName("Site")
        self.Close = QtWidgets.QToolButton(self.frame)
        self.Close.setGeometry(QtCore.QRect(1239, 0, 40, 40))
        self.Close.setStyleSheet("#Close {\n"
"\n"
"  background-color: black;\n"
" \n"
"}\n"
"\n"
"\n"
"#Close:hover:!pressed {\n"
" background-color: red;\n"
"\n"
"}\n"
"\n"
"")
        self.Close.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/close.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.Close.setIcon(icon)
        self.Close.setObjectName("Close")
        self.progressBar = QtWidgets.QProgressBar(self.frame)
        self.progressBar.setGeometry(QtCore.QRect(90, 600, 720, 22))
        self.progressBar.setStyleSheet("#progressBar {\n"
"    background-color: rgba(0, 0, 0, 0.5);\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"#progressBar::chunk {\n"
"    background-color: white;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"")
        self.progressBar.setProperty("value", 50)
        self.progressBar.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.progressBar.setTextVisible(True)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setTextDirection(QtWidgets.QProgressBar.BottomToTop)
        self.progressBar.setObjectName("progressBar")
        self.progressBar_2 = QtWidgets.QProgressBar(self.frame)
        self.progressBar_2.setGeometry(QtCore.QRect(90, 640, 720, 22))
        self.progressBar_2.setStyleSheet("#progressBar_2 {\n"
"    background-color: rgba(0, 0, 0, 0.5);\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"#progressBar_2::chunk {\n"
"    background-color: white;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"\n"
"")
        self.progressBar_2.setProperty("value", 20)
        self.progressBar_2.setTextVisible(False)
        self.progressBar_2.setObjectName("progressBar_2")
        self.info = QtWidgets.QTabWidget(self.frame)
        self.info.setGeometry(QtCore.QRect(830, 480, 361, 181))
        self.info.setStatusTip("")
        self.info.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.info.setAutoFillBackground(False)
        self.info.setStyleSheet("QTabWidget::pane {\n"
"    border: 1px solid #C4C4C3;\n"
"    background: rgba(255, 255, 255, 0.0); /* Прозорий фон для вкладок */\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    left: 5px; /* відступ від лівого краю */\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background: rgba(242, 242, 242, 0.0); /* Прозорий фон для вкладок */\n"
"    \n"
"    min-width: 8ex;\n"
"    padding: 2px;\n"
"}\n"
"\n"
"QTabBar::tab:selected, QTabBar::tab:hover {\n"
"    background: rgba(250, 250, 250, 0.2);\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    border-color: #9B9B9B;\n"
"    border-bottom-color: rgba(242, 242, 242, 0.2);\n"
"}\n"
"\n"
"/* Додайте стиль для віджетів всередині вкладок */\n"
"QWidget {\n"
"    background: rgba(255, 255, 255, 0.0); /* Прозорий фон для віджетів */\n"
"}\n"
"")
        self.info.setTabPosition(QtWidgets.QTabWidget.North)
        self.info.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.info.setUsesScrollButtons(False)
        self.info.setObjectName("info")
        self.tab = QtWidgets.QWidget()
        self.tab.setStyleSheet("")
        self.tab.setObjectName("tab")
        self.info.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.info.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.info.addTab(self.tab_2, "")
        self.Minimize = QtWidgets.QToolButton(self.frame)
        self.Minimize.setGeometry(QtCore.QRect(1199, 0, 40, 40))
        self.Minimize.setStyleSheet("#Minimize {\n"
"\n"
"  background-color: black;\n"
" \n"
"}\n"
"\n"
"\n"
"#Minimize:hover:!pressed {\n"
" background-color: #3a3939;\n"
"\n"
"}\n"
"")
        self.Minimize.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/images/minimize-sign.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.Minimize.setIcon(icon1)
        self.Minimize.setObjectName("Minimize")
        self.Close.raise_()
        self.Discord.raise_()
        self.Facebook.raise_()
        self.Instagram.raise_()
        self.Logo.raise_()
        self.Site.raise_()
        self.Telegram.raise_()
        self.VK.raise_()
        self.Version.raise_()
        self.info.raise_()
        self.progressBar.raise_()
        self.progressBar_2.raise_()
        self.Minimize.raise_()
        self.frame.raise_()
        self.Baner.raise_()
        self.Name_server.raise_()
        LauncherWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(LauncherWindow)
        self.info.setCurrentIndex(0)
        self.Close.clicked['bool'].connect(LauncherWindow.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(LauncherWindow)

    def retranslateUi(self, LauncherWindow):
        _translate = QtCore.QCoreApplication.translate
        LauncherWindow.setWindowTitle(_translate("LauncherWindow", "Launcher"))
        self.Name_server.setText(_translate("LauncherWindow", "<html><head/><body><p><span style=\" font-size:14pt; font-weight:600; color:#ffffff;\">Linage 2</span></p></body></html>"))
        self.Version.setText(_translate("LauncherWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">Version</span></p></body></html>"))
        self.info.setTabText(self.info.indexOf(self.tab), _translate("LauncherWindow", "Tab 1"))
        self.info.setTabText(self.info.indexOf(self.tab_3), _translate("LauncherWindow", "Page"))
        self.info.setTabText(self.info.indexOf(self.tab_2), _translate("LauncherWindow", "Tab 2"))
import res_rc
